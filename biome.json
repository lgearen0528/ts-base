{
	"$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
	"vcs": {
		"enabled": true,
		"clientKind": "git",
		"useIgnoreFile": true
	},
	"files": {
		"ignoreUnknown": false,
		"ignore": [
			"dist/**/*",
			"node_modules/**/*",
			"*.d.ts",
			"coverage/**/*"
		]
	},
	"formatter": {
		"enabled": true,
		"indentStyle": "tab",
		"indentWidth": 2,
		"lineWidth": 100,
		"lineEnding": "lf"
	},
	"organizeImports": {
		"enabled": true
	},
	"linter": {
		"enabled": true,
		"rules": {
			"recommended": true,
			"complexity": {
				"noExtraBooleanCast": "error",
				"noMultipleSpacesInRegularExpressionLiterals": "error",
				"noUselessCatch": "error",
				"noUselessTypeConstraint": "error",
				"noWith": "error"
			},
			"correctness": {
				"noConstAssign": "error",
				"noConstantCondition": "error",
				"noEmptyCharacterClassInRegex": "error",
				"noEmptyPattern": "error",
				"noGlobalObjectCalls": "error",
				"noInvalidConstructorSuper": "error",
				"noInvalidNewBuiltin": "error",
				"noNonoctalDecimalEscape": "error",
				"noPrecisionLoss": "error",
				"noSelfAssign": "error",
				"noSetterReturn": "error",
				"noSwitchDeclarations": "error",
				"noUndeclaredVariables": "error",
				"noUnreachable": "error",
				"noUnreachableSuper": "error",
				"noUnsafeFinally": "error",
				"noUnsafeOptionalChaining": "error",
				"noUnusedLabels": "error",
				"noUnusedVariables": "error",
				"useExhaustiveDependencies": "warn",
				"useHookAtTopLevel": "error",
				"useIsNan": "error",
				"useValidForDirection": "error",
				"useYield": "error"
			},
			"security": {
				"noDangerouslySetInnerHtml": "error",
				"noGlobalEval": "error"
			},
			"style": {
				"noArguments": "error",
				"noVar": "error",
				"useConst": "error",
				"useDefaultParameterLast": "error",
				"useExponentiationOperator": "error",
				"useFragmentSyntax": "error",
				"useTemplate": "error"
			},
			"suspicious": {
				"noArrayIndexKey": "warn",
				"noAsyncPromiseExecutor": "error",
				"noCatchAssign": "error",
				"noClassAssign": "error",
				"noCommentText": "error",
				"noCompareNegZero": "error",
				"noControlCharactersInRegex": "error",
				"noDebugger": "error",
				"noDoubleEquals": "error",
				"noDuplicateCase": "error",
				"noDuplicateClassMembers": "error",
				"noDuplicateObjectKeys": "error",
				"noDuplicateParameters": "error",
				"noEmptyBlockStatements": "error",
				"noExplicitAny": "warn",
				"noExtraNonNullAssertion": "error",
				"noFallthroughSwitchClause": "error",
				"noFunctionAssign": "error",
				"noGlobalAssign": "error",
				"noImportAssign": "error",
				"noMisleadingCharacterClass": "error",
				"noMisleadingInstantiator": "error",
				"noPrototypeBuiltins": "error",
				"noRedeclare": "error",
				"noShadowRestrictedNames": "error",
				"noUnsafeDeclarationMerging": "error",
				"noUnsafeNegation": "error",
				"useGetterReturn": "error",
				"useValidTypeof": "error"
			}
		}
	},
	"javascript": {
		"formatter": {
			"quoteStyle": "single",
			"jsxQuoteStyle": "double",
			"quoteProperties": "asNeeded",
			"trailingCommas": "all",
			"semicolons": "always",
			"arrowParentheses": "always",
			"bracketSpacing": true,
			"bracketSameLine": false
		},
		"parser": {
			"unsafeParameterDecoratorsEnabled": true
		}
	},
	"json": {
		"formatter": {
			"enabled": true,
			"indentStyle": "space",
			"indentWidth": 2,
			"trailingCommas": "none"
		},
		"parser": {
			"allowComments": true,
			"allowTrailingCommas": false
		}
	},
	"overrides": [
		{
			"include": ["*.ts", "*.tsx"],
			"linter": {
				"rules": {
					"correctness": {
						"noUndeclaredVariables": "off",
						"useExhaustiveDependencies": "off"
					},
					"style": {
						"useImportType": "error",
						"useExportType": "error",
						"useNodejsImportProtocol": "error",
						"useNumberNamespace": "error",
						"useSingleVarDeclarator": "error"
					},
					"suspicious": {
						"noExplicitAny": "warn",
						"noConfusingVoidType": "error"
					},
					"nursery": {
						"useSortedClasses": "error"
					}
				}
			}
		},
		{
			"include": ["test/**/*", "tests/**/*", "**/*.test.*", "**/*.spec.*"],
			"linter": {
				"rules": {
					"suspicious": {
						"noExplicitAny": "off"
					},
					"complexity": {
						"noExtraBooleanCast": "off"
					}
				}
			}
		},
		{
			"include": ["*.js", "*.mjs", "*.cjs"],
			"linter": {
				"rules": {
					"correctness": {
						"noUndeclaredVariables": "error"
					}
				}
			}
		}
	]
}
